// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright (c) 2013 Heiko Stuebner <heiko@sntech.de>
 */

/dts-v1/;
#include <dt-bindings/input/input.h>
#include <dt-bindings/clock/rk618-cru.h>
#include <dt-bindings/display/drm_mipi_dsi.h>
#include "rk3188.dtsi"

/ {
	model = "Haierpad 1043";
	compatible = "haierpad,1043", "rockchip,rk3188";

	aliases {
		mmc0 = &mmc0;
	};

	memory@60000000 {
		device_type = "memory";
		reg = <0x60000000 0x80000000>;
	};

	gpio-keys {
		compatible = "gpio-keys";
		autorepeat;

		key-power {
			gpios = <&gpio0 RK_PA4 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_POWER>;
			label = "GPIO Key Power";
			linux,input-type = <1>;
			wakeup-source;
			debounce-interval = <100>;
		};

        // TODO: volume gpios
	};

	vcc_sd0: sdmmc-regulator {
		compatible = "regulator-fixed";
		regulator-name = "sdmmc-supply";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&gpio3 RK_PA1 GPIO_ACTIVE_LOW>;
		pinctrl-names = "default";
		pinctrl-0 = <&sdmmc_pwr>;
		startup-delay-us = <100000>;
		vin-supply = <&vdd_io>;
	};

    backlight: backlight {
        status = "okay";
        compatible = "pwm-backlight";
        pwms = <&pwm3 0 25000 0>;
        enable-gpios = <&gpio0 RK_PA2 GPIO_ACTIVE_HIGH>;
        default-brightness-level = <150>;
    };
};

&cpu0 {
	cpu-supply = <&vdd_cpu>;
};

&cpu1 {
	cpu-supply = <&vdd_cpu>;
};

&cpu2 {
	cpu-supply = <&vdd_cpu>;
};

&cpu3 {
	cpu-supply = <&vdd_cpu>;
};

&gpu {
	status = "okay";
};

&i2c1 {
	status = "okay";
	clock-frequency = <400000>;

    rc5t619: rc5t619@32 {
        compatible = "ricoh,rc5t619";
        reg = <0x32>;
		status = "okay";
        interrupt-parent = <&gpio0>;
        interrupts = <RK_PB3 IRQ_TYPE_EDGE_FALLING>;
        system-power-controller;

        regulators {
			vdd_cpu: DCDC1 {
				regulator-name = "VDD_CPU";
				regulator-min-microvolt = <875000>;
				regulator-max-microvolt = <1350000>;
				regulator-always-on;
			};
			vdd_core: DCDC2 {
				regulator-name = "VDD_CORE";
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <1000000>;
				regulator-always-on;
			};
			vdd_18: DCDC3 {
				regulator-name = "VDD_18";
				regulator-min-microvolt = <2000000>;
				regulator-max-microvolt = <2000000>;
				regulator-always-on;
			};
			vdd_io: DCDC4 {
				regulator-name = "VDD_IO";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};
			vdd_ddr: DCDC5 {
				regulator-name = "VDD_DDR";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1200000>;
				regulator-always-on;
			};

			ldo_30: LDO1 {
				regulator-name = "LDO_30";
				regulator-min-microvolt = <3000000>;
				regulator-max-microvolt = <3000000>;
				regulator-always-on;
			};
			ldo_a_33: LDO2 {
				regulator-name = "LDO_A_33";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};
			ldo_tp: LDO3 {
				regulator-name = "LDO_TP";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};
			ldo_28_cif: LDO4 {
				regulator-name = "LDO_28_CIF";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};
			ldo_18_cif: LDO5 {
				regulator-name = "LDO_18_CIF";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
			};
			ldo_12: LDO6 {
				regulator-name = "LDO_12";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1200000>;
				regulator-always-on;
			};
			ldo_io_18: LDO7 {
				regulator-name = "LDO_IO_18";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1200000>;
				regulator-always-on;
			};
			ldo_a_25: LDO8 {
				regulator-name = "LDO_A_25";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};
			ldo_10: LDO9 {
				regulator-name = "LDO_10";
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <1000000>;
				regulator-always-on;
			};
			ldo_a_18: LDO10 {
				regulator-name = "LDO_A_18";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
			};
			ldo_rtc: LDORTC1 {
				regulator-name = "LDO_RTC";
				regulator-min-microvolt = <3000000>;
				regulator-max-microvolt = <3000000>;
				regulator-always-on;
			};
        };
    };

	rk618@50 {
		compatible = "rockchip,rk618";
		reg = <0x50>;
		pinctrl-names = "default";
		pinctrl-0 = <&i2s0_bus>;
		clocks = <&cru SCLK_I2S0>;
		clock-names = "clkin";
		assigned-clocks = <&cru SCLK_I2S0>;
		assigned-clock-rates = <12000000>;
		reset-gpios = <&gpio3 RK_PB2 GPIO_ACTIVE_HIGH>;
		enable-gpios = <&gpio0 RK_PA3 GPIO_ACTIVE_HIGH>;
		status = "okay";

		clock: cru {
			compatible = "rockchip,rk618-cru";
			clocks = <&cru SCLK_I2S0>, <&cru DCLK_LCDC0>, <&cru DCLK_LCDC1>;
			clock-names = "clkin", "lcdc0_dclkp";
			assigned-clocks = <&clock SCALER_PLLIN_CLK>,
					  <&clock VIF_PLLIN_CLK>,
					  <&clock SCALER_CLK>,
					  <&clock VIF0_PRE_CLK>,
					  <&clock CODEC_CLK>,
					  <&clock DITHER_CLK>;
			assigned-clock-parents = <&cru SCLK_I2S0>,
						 <&clock LCDC0_CLK>,
						 <&clock SCALER_PLL_CLK>,
						 <&clock VIF_PLL_CLK>,
						 <&cru SCLK_I2S0>,
						 <&clock VIF0_CLK>;
			#clock-cells = <1>;
			status = "okay";
		};

		dsi {
			compatible = "rockchip,rk618-dsi";
			clocks = <&clock MIPI_CLK>;
			clock-names = "dsi";
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";

			ports {
				#address-cells = <1>;
				#size-cells = <0>;

				port@0 {
					reg = <0>;

                    lvds_in_vop0: endpoint {
                        remote-endpoint = <&vop0_out_lvds>;
                    };
				};
			};

			panel@0 {
				compatible = "simple-panel-dsi";
				reg = <0>;
				power-supply = <&ldo_tp>;
				backlight = <&backlight>;
				// reset-gpios = <&gpio2 RK_PA0 GPIO_ACTIVE_LOW>;
				prepare-delay-ms = <20>;
				reset-delay-ms = <20>;
				init-delay-ms = <20>;
				enable-delay-ms = <120>;
				disable-delay-ms = <20>;
				unprepare-delay-ms = <20>;

				width-mm = <218>;
				height-mm = <136>;

				dsi,flags = <(MIPI_DSI_MODE_VIDEO |
					      MIPI_DSI_MODE_VIDEO_BURST |
					      MIPI_DSI_MODE_LPM |
					      MIPI_DSI_MODE_EOT_PACKET)>;
				dsi,format = <MIPI_DSI_FMT_RGB888>;
				dsi,lanes = <4>;

                /*
				panel-init-sequence = [
					15 00 02 b0 00
					15 00 02 d6 01
					39 00 06 b3 14 08 00 22 00
					15 00 02 b4 0c
					15 00 02 DE 00
					39 00 03 b6 3a d3
					15 00 02 51 E0
					15 00 02 53 04
					15 00 02 3a 77
					15 00 02 35 01
					39 00 05 2A 00 00 04 AF
					39 00 05 2B 00 00 07 7F
					05 96 01 29
					05 14 01 11
				];

				panel-exit-sequence = [
					05 00 01 28
					05 00 01 10
				];
                */

				display-timings {
					native-mode = <&timing1>;

					timing1: timing1 {
						clock-frequency = <164000000>;
						hactive = <1920>;
						vactive = <1200>;
						hback-porch = <11>;
						hfront-porch = <446>;
						vback-porch = <5>;
						vfront-porch = <10>;
						hsync-len = <11>;
						vsync-len = <5>;
						hsync-active = <0>;
						vsync-active = <0>;
						de-active = <0>;
						pixelclk-active = <0>;
					};
				};
			};
		};
	};
};

&mmc0 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&sd0_clk>, <&sd0_cmd>, <&sd0_cd>, <&sd0_bus4>;
	vmmc-supply = <&vcc_sd0>;

	bus-width = <4>;
	cap-mmc-highspeed;
	cap-sd-highspeed;
	disable-wp;
};

&pwm1 {
	status = "okay";
};

&pwm2 {
	status = "okay";
};

&pwm3 {
	status = "okay";
};

&pinctrl {
	pcfg_output_low: pcfg-output-low {
		output-low;
	};

	sd0 {
		sdmmc_pwr: sdmmc-pwr {
			rockchip,pins = <3 RK_PA1 RK_FUNC_GPIO &pcfg_pull_none>;
		};
	};

	usb {
		host_vbus_drv: host-vbus-drv {
			rockchip,pins = <0 RK_PA3 RK_FUNC_GPIO &pcfg_pull_none>;
		};
		otg_vbus_drv: otg-vbus-drv {
			rockchip,pins = <2 RK_PD7 RK_FUNC_GPIO &pcfg_pull_none>;
		};
	};
};

&spdif {
	status = "okay";
};

&uart0 {
	status = "okay";
};

&uart1 {
	status = "okay";
};

&uart2 {
	status = "okay";
};

&uart3 {
	status = "okay";
};

&usbphy {
	status = "okay";
};

&usb_host {
	status = "okay";
};

&usb_otg {
	status = "okay";
};

&wdt {
	status = "okay";
};

&vop0 {
	status = "okay";
};

&vop0_out {
	vop0_out_lvds: endpoint {
		remote-endpoint = <&lvds_in_vop0>;
	};
};

